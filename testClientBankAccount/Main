package OOP.a_definingClass.testClientBankAccount;

import OOP.a_definingClass.bankAccount.BankAccount;
import advance.SetsAndMaps.Map;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;

public class Main {
    public static void main(String[] args) throws IOException {
        java.util.Map <Integer, ClientBankAccount> accounts = new HashMap <>();

        BufferedReader reader = new BufferedReader( new InputStreamReader( System.in ) );

        String line = reader.readLine();
        while (!"End".equals( line )) {
            String[] commandArgs = line.split( " " );
            int id = Integer.parseInt( commandArgs[1] );


            {
                switch (commandArgs[0]) {
                    case "Create":


                        if (accounts.containsKey( id )) {
                            System.out.println( "Account already exists" );
                        } else {
                            ClientBankAccount ba = new ClientBankAccount();
                            ba.setId( id );
                            accounts.put( id, ba );

                        }

                        break;

                    case "Deposit":
                        double amount = Double.parseDouble( commandArgs[2] );
                        if (accounts.get( id )==null){
                                System.out.println("Account does not exist");
                                break;
                        }

                        accounts.get( id ).deposit( amount );

                        break;

                    case "Withdraw":
                        double withdrawAmountt = Double.parseDouble( commandArgs[2] );
                        ClientBankAccount acc = accounts.get( id );
                        if (acc != null) {
                            if (acc.getBalance() < withdrawAmountt) {
                                System.out.println( "Insufficient balance" );
                            } else {
                                acc.withdraw( withdrawAmountt );
                            }
                        } else {
                            System.out.println("Account does not exist");
                        }

                        break;

                    case "Print":
                        if (accounts.get( id )==null){
                            System.out.println("Account does not exist");
                            break;
                        }else {
                            System.out.println(accounts.get( id ));
                        }

                        break;

                }
            }

            line = reader.readLine();
        }


    }
}
